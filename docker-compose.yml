services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: users_api_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-users_api}
      MYSQL_USER: ${DB_USER:-apiuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-apipassword}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./internal/database/migrations.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # API Go
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: users_api_app
    restart: unless-stopped
    environment:
      # Variables de entorno para la API
      SERVER_PORT: ${SERVER_PORT:-8080}
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      
      # Configuraci√≥n de base de datos (apunta al contenedor mysql)
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-apiuser}
      DB_PASSWORD: ${DB_PASSWORD:-apipassword}
      DB_NAME: ${DB_NAME:-users_api}
      DB_SSL_MODE: disable
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge